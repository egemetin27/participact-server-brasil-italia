configurations {
    jaxb
}


import java.text.SimpleDateFormat

apply plugin: 'base'
apply plugin: 'war'
apply plugin: 'java'
apply plugin: 'eclipse-wtp'

description = 'ParticipAct Server'
group = 'it.unibo.paserver'
version = '4.1.0'

sourceCompatibility = 1.6
targetCompatibility = 1.6

//ext.springVersion = '4.2.8.RELEASE'
//ext.springSecurityVersion = '3.2.9.RELEASE'
//ext.springSwfVersion = '2.4.4.RELEASE'
ext.springVersion = '4.2.8.RELEASE'
ext.springSecurityVersion = '3.2.9.RELEASE'
ext.springSwfVersion = '2.4.4.RELEASE'
ext.springWsCore = '2.4.0.RELEASE'
ext.aspectjVersion = '1.7.1'
ext.slf4jVersion = '1.7.2'
ext.logbackVersion = '1.0.9'
ext.hibernateVersion = '4.2.8.Final'
ext.hibernateValidatorVersion = '5.0.1.Final'
ext.jacksonVersion = '2.8.4'

repositories {
    mavenCentral()
    maven {
        url 'http://maven.springframework.org/release'
    }
    maven {
        url 'http://maven.springframework.org/snapshot'
    }
    maven {
        url 'http://maven.springframework.org/milestone'
    }

    maven {
        url 'https://repository.jboss.org/nexus/content/repositories/releases/'
    }
    maven {
        url 'http://download.java.net/maven/glassfish/org/glassfish/'
    }
    maven {
        url 'http://snapshots.repository.codehaus.org'
    }
    maven {
        url 'http://repo1.maven.org/maven2/com/fasterxml/jackson/'
    }
    maven {
        url 'http://www.terracotta.org/download/reflector/releases'
    }
    maven {
        url 'http://download.osgeo.org/webdav/geotools'
    }
    maven {
        url 'http://www.hibernatespatial.org/repository'
    }
}


task genJaxbSolweb{
    ext.sourcesDir = "src/main/java/"
    ext.schema = "https://solweb.tper.it/tperit/webservices/opendata.asmx?wsdl"


    doLast() {
        project.ant {
            taskdef name: "xjc", classname: "com.sun.tools.xjc.XJCTask", classpath: configurations.jaxb.asPath
            xjc(destdir: sourcesDir, schema: schema, package: "it.unibo.tper.ws.domain") {
                arg(value: "-wsdl")
                arg(value: "http://www.w3.org/2001/XMLSchema.xsd")
                produces(dir: sourcesDir, includes: "**/*.java")
            }


        }
    }
}

// tag::wsdl[]
task genJaxbCgu {
    ext.sourcesDir = "${buildDir}/generated-sources/jaxb"
    ext.classesDir = "${buildDir}/classes/jaxb"
    ext.schema = "https://treinamentoouvidorias.cgu.gov.br/Servicos/ServicoConsultaDadosCodigos.svc?wsdl"

    outputs.dir classesDir

    doLast() {
        project.ant {
            taskdef name: "xjc", classname: "com.sun.tools.xjc.XJCTask", classpath: configurations.jaxb.asPath
            mkdir(dir: sourcesDir)
            mkdir(dir: classesDir)
            xjc(destdir: sourcesDir, schema: schema, package: "br.gov.cgu.wsdl") {
                arg(value: "-wsdl")
                arg(value: "http://www.w3.org/2001/XMLSchema")
                produces(dir: sourcesDir, includes: "**/*.java")
            }

            javac(destdir: classesDir, source: 1.8, target: 1.8, debug: true, debugLevel: "lines,vars,source",  classpath: configurations.jaxb.asPath) {
                src(path: sourcesDir)
                include(name: "**/*.java")
                include(name: "*.java")
            }

            copy(todir: classesDir) {
                fileset(dir: sourcesDir, erroronmissingdir: false) {
                    exclude(name: "**/*.java")
                }
            }
        }
    }
}
// end::wsdl[]

dependencies() {
    compile("org.springframework:spring-context:${springVersion}") {
        exclude group: 'commons-logging', module: 'commons-logging'
    }
    compile "org.springframework:spring-orm:$springVersion"
    compile "org.springframework:spring-tx:$springVersion"
    compile "org.springframework:spring-web:$springVersion"

    compile "org.springframework:spring-webmvc:$springVersion"
    compile "org.aspectj:aspectjrt:$aspectjVersion"
    compile "ch.qos.logback:logback-classic:$logbackVersion"
    compile "ch.qos.logback:logback-core:$logbackVersion"
    compile "ch.qos.logback:logback-access:$logbackVersion"
    compile "org.slf4j:slf4j-api:$slf4jVersion"
    compile "org.slf4j:jcl-over-slf4j:$slf4jVersion"

    providedCompile "javax.servlet:javax.servlet-api:3.0.1"

    compile "org.springframework.webflow:spring-webflow:$springSwfVersion"
    compile "org.springframework.webflow:spring-js:$springSwfVersion"
    compile "org.springframework.webflow:spring-binding:$springSwfVersion"

    compile "org.springframework.security:spring-security-core:$springSecurityVersion"
    compile "org.springframework.security:spring-security-web:$springSecurityVersion"
    compile "org.springframework.security:spring-security-config:$springSecurityVersion"
    compile "org.springframework.security:spring-security-taglibs:$springSecurityVersion"
    compile "org.springframework.security:spring-security-taglibs:$springSecurityVersion"
    compile group: "org.springframework", name: "spring-messaging", version: "$springVersion"
    compile group: "org.springframework", name: "spring-websocket", version: "$springVersion"


    compile "cglib:cglib:2.2.2"

    compile "org.hibernate:hibernate-entitymanager:$hibernateVersion"
    compile "org.hibernate:hibernate-core:$hibernateVersion"
    compile "org.hibernate:hibernate-ehcache:$hibernateVersion"
    compile "org.hibernate:hibernate-validator:$hibernateValidatorVersion"

    compile "org.apache.commons:commons-lang3:3.1"
    compile "com.h2database:h2:1.3.170"

    compile "joda-time:joda-time:2.2"
    compile "joda-time:joda-time-jsptags:1.1.1"
    compile "org.jadira.usertype:usertype.parent:3.0.0.CR3"
    compile "org.jadira.usertype:usertype.core:3.0.0.GA"
    compile "com.google.zxing:core:2.1"
    compile "com.google.zxing:javase:2.1"
    //compile group: 'org.postgresql', name: 'postgresql', version: '9.2-1002-jdbc4'
    compile group: 'org.postgresql', name: 'postgresql', version: '9.4-1204-jdbc4'
    compile group: 'com.jolbox', name: 'bonecp', version: '0.8.0.RELEASE'
    compile "org.apache.tika:tika-core:1.3"
    compile group: 'com.thoughtworks.xstream', name: 'xstream-benchmark', version: '1.3.1'

    compile "com.fasterxml.jackson.core:jackson-core:$jacksonVersion"
    compile "com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion"
    compile "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    compile "org.twitter4j:twitter4j-core:3.0.5"

    compile "com.google.protobuf:protobuf-java:2.5.0"

    compile "org.apache.commons:commons-email:1.3.1"

    compile "org.mapfish.geo:mapfish-geo-lib:1.2.0"
    compile "com.vividsolutions:jts:1.13"

    compile "org.springframework.ws:spring-ws-core:$springWsCore"
    compile group: 'com.mashape.unirest', name: 'unirest-java', version: '1.3.1'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.7'
    compile group: 'commons-codec', name: 'commons-codec', version: '1.10'
    compile group: 'org.springframework.data', name: 'spring-data-commons-core', version: '1.4.1.RELEASE'
    compile group: 'xerces', name: 'xercesImpl', version: '2.11.0'
    compile group: 'com.google.guava', name: 'guava', version: '19.0'
    compile group: 'commons-fileupload', name: 'commons-fileupload', version: '1.3.2'
    compile group: 'commons-io', name: 'commons-io', version: '2.5'
    compile group: 'commons-lang', name: 'commons-lang', version: '2.6'
    compile group: 'commons-validator', name: 'commons-validator', version: '1.6'
    compile group: 'com.opencsv', name: 'opencsv', version: '3.8'
    compile group: 'de.sven-jacobs', name: 'loremipsum', version: '1.0'
    compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-csv', version: '2.7.8'
    compile group: 'com.microsoft.azure', name: 'azure-storage', version: '6.1.0'
    compile group: 'com.microsoft.azure', name: 'azure-media', version: '0.9.8'
    compile 'org.springframework.social:spring-social-facebook:2.0.3.RELEASE'
//    compile group: 'org.springframework.social', name: 'spring-social-google', version: '1.0.0.RELEASE'
//    compile 'com.github.spring-social:spring-social-google:latest.release'
    compile group: 'com.sun.xml.bind', name: 'jaxb-xjc', version: '2.1.8'
    compile group: 'wsdl4j', name: 'wsdl4j', version: '1.6.2'
    compile group: 'com.nerdforge', name: 'unxml', version: '0.9'
    compile group: 'fr.dudie', name: 'nominatim-api', version: '3.4'
    // compile group: 'me.atlis', name: 'nominatim-api', version: '1.0.0'
    compile group: 'com.google.maps', name: 'google-maps-services', version: '0.9.3'

    compile group: 'net.minidev', name: 'accessors-smart', version: '1.2'
    //compile group: 'com.nimbusds', name: 'lang-tag', version: '1.4.4'
    compile group: 'net.minidev', name: 'json-smart', version: '2.3'
    compile group: 'org.ow2.asm', name: 'asm', version: '5.0.4'
    compile group: 'com.github.spring-social', name: 'spring-social-google', version: '1.1.3'

    jaxb "com.sun.xml.bind:jaxb-xjc:2.1.8"
    runtime "jstl:jstl:1.2"

    testCompile "junit:junit:4.9"
    testCompile "org.springframework:spring-test:$springVersion"
    testCompile 'org.mockito:mockito-all:1.9.5'
    //testCompile 'org.springframework:spring-test-mvc:1.0.0.M2'
}

eclipse {
    project.natures "org.springframework.ide.eclipse.core.springnature"
}

war {
    archiveName = "${project.name}-${getCurrentTimestamp()}.${extension}"
}

task afterEclipseImport {
    //dependsOn genJaxbSolweb
    //dependsOn genJaxbCgu
}

task copyToLib(type: Copy) {
    into "lib/"
    from configurations.runtime
}

def getCurrentTimestamp() {
    Date today = new Date()
    SimpleDateFormat df = new SimpleDateFormat("yyyyMMddhhmm")
    return df.format(today)
}